---
# Source: spring-boot-app/templates/tests/test-deployment.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "kafka-data-processor-test-deployment"
  labels:
    helm.sh/chart: spring-boot-app-0.0.1
    app.kubernetes.io/name: kafka-data-processor
    app.kubernetes.io/instance: release
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": hook-succeeded
  namespace: spring-projects
spec:
  containers:
    - name: kubectl
      image: bitnami/kubectl:latest
      command:
        - /bin/sh
        - -ec
        - |
          echo "Testing deployment readiness..."
          kubectl wait --for=condition=available deployment/kafka-data-processor --timeout=2m
          
          echo "Verifying resource requirements..."
          echo "Verifying service account..."
          kubectl get serviceaccount kafka-data-processor || exit 1
          echo "✅ Service account verified"
          echo "Verifying KEDA configuration..."
          
          # Check ScaledObject
          kubectl get scaledobject kafka-data-processor || exit 1
          echo "✅ KEDA ScaledObject verified"
          
          # Verify ScaledObject configuration
          echo "Verifying ScaledObject configuration..."
          kubectl get scaledobject kafka-data-processor -o jsonpath='{.spec.minReplicaCount}' | grep -q "1" || exit 1
          kubectl get scaledobject kafka-data-processor -o jsonpath='{.spec.maxReplicaCount}' | grep -q "16" || exit 1
          kubectl get scaledobject kafka-data-processor -o jsonpath='{.spec.pollingInterval}' | grep -q "30" || exit 1
          kubectl get scaledobject kafka-data-processor -o jsonpath='{.spec.cooldownPeriod}' | grep -q "300" || exit 1
          echo "✅ ScaledObject configuration verified"
          
          # Verify scalers
          echo "Verifying KEDA scalers..."
          echo "Verifying scaler type: kafka..."
          kubectl get scaledobject kafka-data-processor -o jsonpath='{.spec.triggers[*].type}' | grep -q "kafka" || exit 1
          kubectl get scaledobject kafka-data-processor -o jsonpath='{.spec.triggers[*].metadata.bootstrapServers' | grep -q "apache-kafka.kafka.svc.cluster.local:9092" || exit 1
          kubectl get scaledobject kafka-data-processor -o jsonpath='{.spec.triggers[*].metadata.consumerGroup' | grep -q "IncomingRequestListener" || exit 1
          kubectl get scaledobject kafka-data-processor -o jsonpath='{.spec.triggers[*].metadata.lagThreshold' | grep -q "200" || exit 1
          kubectl get scaledobject kafka-data-processor -o jsonpath='{.spec.triggers[*].metadata.topic' | grep -q "IncomingRequests" || exit 1
          echo "✅ Scaler kafka verified"
          echo "✅ All KEDA scalers verified"
          echo "Verifying SealedSecrets..."
          kubectl get sealedsecret -l app.kubernetes.io/instance=release || exit 1
          echo "✅ SealedSecrets verified"
          
          echo "All deployment components verified successfully! ✅"
  restartPolicy: Never
