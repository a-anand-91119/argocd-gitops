tenant:
  tenant:
    name: minio-tenant
    configuration:
      name: minio-env-configuration
    ###
    # Root key for dynamically creating a secret for use with configuring root MinIO User
    # Specify the ``name`` and then a list of environment variables.
    #
    # .. important::
    #
    #    Do not use this in production environments.
    #    This field is intended for use with rapid development or testing only.
    #
    # For example:
    #
    # .. code-block:: yaml
    #
    #    name: myminio-env-configuration
    #    accessKey: minio
    #    secretKey: minio123
    #
    configSecret:
      name: minio-env-configuration
      accessKey: minio
      secretKey: minio123
#      existingSecret: true

    ###
    # If this variable is set to true, then enable the usage of an existing Kubernetes secret to set environment variables for the Tenant.
    # The existing Kubernetes secret name must be placed under .tenant.configuration.name e.g. existing-minio-env-configuration
    # The secret must contain a key ``config.env``.
    # The values should be a series of export statements to set environment variables for the Tenant.
    # For example:
    #
    # .. code-block:: shell
    #
    #    stringData:
    #       config.env: |-
    #         export MINIO_ROOT_USER=ROOTUSERNAME
    #         export MINIO_ROOT_PASSWORD=ROOTUSERPASSWORD
    #
    #   existingSecret: false
    ###
    # Top level key for configuring MinIO Pool(s) in this Tenant.
    #
    # See `Operator CRD: Pools <https://min.io/docs/minio/kubernetes/upstream/reference/operator-crd.html#pool>`__ for more information on all subfields.
    pools:
      - servers: 4
        name: pool-0
        volumesPerServer: 4
        size: 10Gi
        ###
        # The `storageClass <https://kubernetes.io/docs/concepts/storage/storage-classes/>`__ to associate with volumes generated for this pool.
        #
        # If using Amazon Elastic Block Store (EBS) CSI driver
        # Please make sure to set xfs for "csi.storage.k8s.io/fstype" parameter under StorageClass.parameters.
        # Docs: https://github.com/kubernetes-sigs/aws-ebs-csi-driver/blob/master/docs/parameters.md
        storageClassName: longhorn-xfs
    mountPath: /export
    subPath: /data
    metrics:
      enabled: true
      port: 9000
      protocol: http
    ###
    # MinIO features to enable or disable in the MinIO Tenant
    # See `Operator CRD: Features <https://min.io/docs/minio/kubernetes/upstream/reference/operator-crd.html#features>`__.
    features:
      bucketDNS: false
      domains: { }
      enableSFTP: false
    ###
    # Array of objects describing one or more buckets to create during tenant provisioning.
    # Example:
    #
    # .. code-block:: yaml
    #
    #    - name: my-minio-bucket
    #      objectLock: false        # optional
    #      region: us-east-1        # optional
    buckets: [ ]
    ###
    # Array of Kubernetes secrets from which the Operator generates MinIO users during tenant provisioning.
    #
    # Each secret should specify the ``CONSOLE_ACCESS_KEY`` and ``CONSOLE_SECRET_KEY`` as the access key and secret key for that user.
    users: [ ]
    podManagementPolicy: Parallel
    ###
    # Directs the Operator to deploy the MinIO S3 API and Console services as LoadBalancer objects.
    #
    # If the Kubernetes cluster has a configured LoadBalancer, it can attempt to route traffic to those services automatically.
    #
    # - Specify ``minio: true`` to expose the MinIO S3 API.
    # - Specify ``console: true`` to expose the Console.
    #
    # Both fields default to ``false``.
    exposeServices:
      minio: true
      console: true
    ###
    # Directs the Operator to add the Tenant's metric scrape configuration to an existing Kubernetes Prometheus deployment managed by the Prometheus Operator.
    prometheusOperator: true
    ###
    # Configure pod logging configuration for the MinIO Tenant.
    #
    # - Specify ``json`` for JSON-formatted logs.
    # - Specify ``anonymous`` for anonymized logs.
    # - Specify ``quiet`` to supress logging.
    #
    # An example of JSON-formatted logs is as follows:
    #
    # .. code-block:: shell
    #
    #    $ k logs myminio-pool-0-0 -n default
    #    {"level":"INFO","errKind":"","time":"2022-04-07T21:49:33.740058549Z","message":"All MinIO sub-systems initialized successfully"}
    logging: { }
    ###
    # Add environment variables to be set in MinIO container (https://github.com/minio/minio/tree/master/docs/config)
    env: [ ]
  ###
  # Configures `Ingress <https://kubernetes.io/docs/concepts/services-networking/ingress/>`__ for the Tenant S3 API and Console.
  #
  # Set the keys to conform to the Ingress controller and configuration of your choice.
  ingress:
    api:
      enabled: false
      ingressClassName: ""
      labels: { }
      annotations: { }
      tls: [ ]
      host: minio.local
      path: /
      pathType: Prefix
    console:
      enabled: false
      ingressClassName: ""
      labels: { }
      annotations: { }
      tls: [ ]
      host: minio-console.local
      path: /
      pathType: Prefix
  # Use an extraResources template section to include additional Kubernetes resources
  # with the Helm deployment.
  #extraResources:
  #  - |
  #    apiVersion: v1
  #    kind: Secret
  #    type: Opaque
  #    metadata:
  #      name: {{ dig "tenant" "configSecret" "name" "" (.Values | merge (dict)) }}
  #    stringData:
  #      config.env: |-
  #        export MINIO_ROOT_USER='minio'
  #        export MINIO_ROOT_PASSWORD='minio123'